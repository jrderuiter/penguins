{
  "pipelineSpec": {
    "components": {
      "comp-eval-model": {
        "executorLabel": "exec-eval-model",
        "inputDefinitions": {
          "artifacts": {
            "model_path": {
              "artifactType": {
                "schemaTitle": "system.Model",
                "schemaVersion": "0.0.1"
              }
            }
          }
        },
        "outputDefinitions": {
          "artifacts": {
            "metrics": {
              "artifactType": {
                "schemaTitle": "system.Metrics",
                "schemaVersion": "0.0.1"
              }
            }
          },
          "parameters": {
            "roc": {
              "type": "DOUBLE"
            }
          }
        }
      },
      "comp-fetch-bigquery": {
        "executorLabel": "exec-fetch-bigquery",
        "inputDefinitions": {
          "parameters": {
            "project_id": {
              "type": "STRING"
            },
            "query": {
              "type": "STRING"
            }
          }
        },
        "outputDefinitions": {
          "artifacts": {
            "output_path": {
              "artifactType": {
                "schemaTitle": "system.Dataset",
                "schemaVersion": "0.0.1"
              }
            }
          }
        }
      },
      "comp-train-model": {
        "executorLabel": "exec-train-model",
        "inputDefinitions": {
          "artifacts": {
            "train_dataset": {
              "artifactType": {
                "schemaTitle": "system.Dataset",
                "schemaVersion": "0.0.1"
              }
            }
          }
        },
        "outputDefinitions": {
          "artifacts": {
            "model": {
              "artifactType": {
                "schemaTitle": "system.Model",
                "schemaVersion": "0.0.1"
              }
            }
          }
        }
      }
    },
    "deploymentSpec": {
      "executors": {
        "exec-eval-model": {
          "container": {
            "args": [
              "--executor_input",
              "{{$}}",
              "--function_to_execute",
              "eval_model"
            ],
            "command": [
              "sh",
              "-c",
              "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'kfp==1.8.9' && \"$0\" \"$@\"\n",
              "sh",
              "-ec",
              "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
              "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing import *\n\ndef eval_model(model_path: InputPath(Model), metrics: Output[Metrics]) -> NamedTuple(\n    'EvalModelOutput',\n    [\n      ('roc', float)\n    ]):\n  print(model_path)\n\n  metrics.log_metric(\"roc\", 0.9)\n\n"
            ],
            "image": "python:3.9-slim"
          }
        },
        "exec-fetch-bigquery": {
          "container": {
            "args": [
              "--executor_input",
              "{{$}}",
              "--function_to_execute",
              "fetch_bigquery"
            ],
            "command": [
              "sh",
              "-c",
              "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'google-cloud-bigquery' 'pandas' 'pyarrow' 'kfp==1.8.9' && \"$0\" \"$@\"\n",
              "sh",
              "-ec",
              "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
              "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing import *\n\ndef fetch_bigquery(\n    query: str, output_path: OutputPath(Dataset), project_id: Optional[str] = None\n) -> None:\n    \"\"\"Calculates sum of two arguments\"\"\"\n\n    from google.cloud import bigquery\n\n    client = bigquery.Client(project=project_id)\n    job = client.query(query)\n\n    df = job.to_dataframe()\n    df.to_parquet(output_path)\n\n"
            ],
            "image": "python:3.9-slim"
          }
        },
        "exec-train-model": {
          "container": {
            "command": [
              "penguin-model",
              "{{$.inputs.artifacts['train_dataset'].path}}",
              "{{$.outputs.artifacts['model'].path}}"
            ],
            "image": "europe-west1-docker.pkg.dev/cde-ds-enablement-8k1r/vertex/penguin_model"
          }
        }
      }
    },
    "pipelineInfo": {
      "name": "penguin"
    },
    "root": {
      "dag": {
        "outputs": {
          "artifacts": {
            "eval-model-metrics": {
              "artifactSelectors": [
                {
                  "outputArtifactKey": "metrics",
                  "producerSubtask": "eval-model"
                }
              ]
            }
          }
        },
        "tasks": {
          "eval-model": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-eval-model"
            },
            "dependentTasks": [
              "train-model"
            ],
            "inputs": {
              "artifacts": {
                "model_path": {
                  "taskOutputArtifact": {
                    "outputArtifactKey": "model",
                    "producerTask": "train-model"
                  }
                }
              }
            },
            "taskInfo": {
              "name": "eval-model"
            }
          },
          "fetch-bigquery": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-fetch-bigquery"
            },
            "inputs": {
              "parameters": {
                "project_id": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "cde-ds-enablement-8k1r"
                    }
                  }
                },
                "query": {
                  "runtimeValue": {
                    "constantValue": {
                      "stringValue": "SELECT * FROM bigquery-public-data.ml_datasets.penguins"
                    }
                  }
                }
              }
            },
            "taskInfo": {
              "name": "fetch-bigquery"
            }
          },
          "train-model": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-train-model"
            },
            "dependentTasks": [
              "fetch-bigquery"
            ],
            "inputs": {
              "artifacts": {
                "train_dataset": {
                  "taskOutputArtifact": {
                    "outputArtifactKey": "output_path",
                    "producerTask": "fetch-bigquery"
                  }
                }
              }
            },
            "taskInfo": {
              "name": "train-model"
            }
          }
        }
      },
      "outputDefinitions": {
        "artifacts": {
          "eval-model-metrics": {
            "artifactType": {
              "schemaTitle": "system.Metrics",
              "schemaVersion": "0.0.1"
            }
          }
        }
      }
    },
    "schemaVersion": "2.0.0",
    "sdkVersion": "kfp-1.8.9"
  },
  "runtimeConfig": {}
}
